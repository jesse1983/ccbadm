# require 'open-uri'
# require 'net/http'

# desc "Web Crawler ondecongregar.com.br"
# task :ondecongregar => :environment do
# 	base = "http://www.ondecongregar.com.br"
# 	url = URI.parse "#{base}/Relatorio.aspx"
# 	params = CGI::parse("__EVENTTARGET=&__EVENTARGUMENT=&__LASTFOCUS=&__VIEWSTATE=%2FwEPDwUKMTQzOTI4Nzg1OQ9kFgICAQ9kFkICAw8PFgIeBFRleHQFCVByaW5jaXBhbGRkAgUPDxYCHwAFClJlbGF0w7NyaW9kZAIHDw8WAh8ABQdHYWxlcmlhZGQCCQ8PFgIfAAULUHJveGltaWRhZGVkZAILDw8WAh8ABRBDdWx0b3MgRXNwZWNpYWlzZGQCDQ8PFgIfAAUJZSBFbnNhaW9zZGQCDw8PFgIfAAUHQsOtYmxpYWRkAhEPDxYCHwAFB0NvbnRhdG9kZAIdDw8WAh8ABQZCcmFzaWxkZAIfDw8WAh8ABQ1JbnRlcm5hY2lvbmFsZGQCIQ8PFgIfAAUWQnVzY2EgUsOhcGlkYSAtIEJyYXNpbGRkAiMPDxYCHwAFBUxvY2FsZGQCJw8PFgIfAAUFQnVzY2FkZAIpDw8WAh8ABRhCdXNjYSBBdmFuw6dhZGEgLSBCcmFzaWxkZAIrD2QWAmYPZBYMAgMPDxYCHwAFBkVzdGFkb2RkAgUPEGQQFRwHKFRvZG9zKQRBY3JlB0FsYWdvYXMGQW1hcMOhCEFtYXpvbmFzBUJhaGlhBkNlYXLDoRBEaXN0cml0byBGZWRlcmFsD0VzcMOtcml0byBTYW50bwZHb2nDoXMJTWFyYW5ow6NvC01hdG8gR3Jvc3NvEk1hdG8gR3Jvc3NvIGRvIFN1bAxNaW5hcyBHZXJhaXMFUGFyw6EIUGFyYcOtYmEHUGFyYW7DoQpQZXJuYW1idWNvBlBpYXXDrQ5SaW8gZGUgSmFuZWlybxNSaW8gR3JhbmRlIGRvIE5vcnRlEVJpbyBHcmFuZGUgZG8gU3VsCVJvbmTDtG5pYQdSb3JhaW1hDlNhbnRhIENhdGFyaW5hClPDo28gUGF1bG8HU2VyZ2lwZQlUb2NhbnRpbnMVHAACQUMCQUwCQVACQU0CQkECQ0UCREYCRVMCR08CTUECTVQCTVMCTUcCUEECUEICUFICUEUCUEkCUkoCUk4CUlMCUk8CUlICU0MCU1ACU0UCVE8UKwMcZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZxYBAhlkAgcPDxYCHwAFB1JlZ2nDo29kZAIJDxBkEBVAByhUb2RvcykDQUJDCkFkYW1hbnRpbmEGQW1wYXJvCUFuZHJhZGluYQpBcmHDp2F0dWJhCkFyYXJhcXVhcmEFQXNzaXMJQXVyaWZsYW1hBkF2YXLDqQdCYW5hbmFsCEJhcnJldG9zCEJhdGF0YWlzBUJhdXJ1B0JpcmlndWkIQm90dWNhdHUSQnJhZ2Fuw6dhIFBhdWxpc3RhCENhbXBpbmFzEUNhbXBvcyBkbyBKb3Jkw6NvDUNhcMOjbyBCb25pdG8NQ2FyYWd1YXRhdHViYQlDYXRhbmR1dmEHRHJhY2VuYQ5GZXJuYW5kw7Nwb2xpcwZGcmFuY2EPRnJhbmNvIGRhIFJvY2hhDkd1YXJhdGluZ3VldMOhCUd1YXJ1bGhvcwlJdGFuaGHDqW0USXRhcGVjZXJpY2EgZGEgU2VycmEMSXRhcGV0aW5pbmdhB0l0YXBldmELSmFib3RpY2FiYWwFSmFsZXMESmHDughKdW5kaWHDrQdMaW1laXJhBExpbnMITWFyw61saWEPTW9naSBkYXMgQ3J1emVzCk1vZ2kgTWlyaW0JTmhhbmRlYXJhDk5vdm8gSG9yaXpvbnRlBk9zYXNjbwhPdXJpbmhvcwlQYXJhaWJ1bmEHUGllZGFkZQpQaXJhY2ljYWJhDFBpcmFzc3VudW5nYRNQcmVzaWRlbnRlIFBydWRlbnRlCFJlZ2lzdHJvD1JpYmVpcsOjbyBQcmV0bwlSaW8gQ2xhcm8GU2FudG9zC1PDo28gQ2FybG9zF1PDo28gSm%2FDo28gZGEgQm9hIFZpc3RhFVPDo28gSm9hcXVpbSBkYSBCYXJyYRdTw6NvIEpvc8OpIGRvIFJpbyBQcmV0bxVTw6NvIEpvc8OpIGRvcyBDYW1wb3MKU8OjbyBQYXVsbwhTb3JvY2FiYQZUYXR1w60FVHVww6MLVm90dXBvcmFuZ2EVQAADQUJDCkFkYW1hbnRpbmEGQW1wYXJvCUFuZHJhZGluYQpBcmHDp2F0dWJhCkFyYXJhcXVhcmEFQXNzaXMJQXVyaWZsYW1hBkF2YXLDqQdCYW5hbmFsCEJhcnJldG9zCEJhdGF0YWlzBUJhdXJ1B0JpcmlndWkIQm90dWNhdHUSQnJhZ2Fuw6dhIFBhdWxpc3RhCENhbXBpbmFzEUNhbXBvcyBkbyBKb3Jkw6NvDUNhcMOjbyBCb25pdG8NQ2FyYWd1YXRhdHViYQlDYXRhbmR1dmEHRHJhY2VuYQ5GZXJuYW5kw7Nwb2xpcwZGcmFuY2EPRnJhbmNvIGRhIFJvY2hhDkd1YXJhdGluZ3VldMOhCUd1YXJ1bGhvcwlJdGFuaGHDqW0USXRhcGVjZXJpY2EgZGEgU2VycmEMSXRhcGV0aW5pbmdhB0l0YXBldmELSmFib3RpY2FiYWwFSmFsZXMESmHDughKdW5kaWHDrQdMaW1laXJhBExpbnMITWFyw61saWEPTW9naSBkYXMgQ3J1emVzCk1vZ2kgTWlyaW0JTmhhbmRlYXJhDk5vdm8gSG9yaXpvbnRlBk9zYXNjbwhPdXJpbmhvcwlQYXJhaWJ1bmEHUGllZGFkZQpQaXJhY2ljYWJhDFBpcmFzc3VudW5nYRNQcmVzaWRlbnRlIFBydWRlbnRlCFJlZ2lzdHJvD1JpYmVpcsOjbyBQcmV0bwlSaW8gQ2xhcm8GU2FudG9zC1PDo28gQ2FybG9zF1PDo28gSm%2FDo28gZGEgQm9hIFZpc3RhFVPDo28gSm9hcXVpbSBkYSBCYXJyYRdTw6NvIEpvc8OpIGRvIFJpbyBQcmV0bxVTw6NvIEpvc8OpIGRvcyBDYW1wb3MKU8OjbyBQYXVsbwhTb3JvY2FiYQZUYXR1w60FVHVww6MLVm90dXBvcmFuZ2EUKwNAZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZxYBAhFkAgsPDxYCHwAFBkNpZGFkZWRkAg0PEGQQFREHKFRvZG9zKQxBbWVyaWNhbmEvU1ALQ2FtcGluYXMvU1AOQ29zbcOzcG9saXMvU1APRWxpYXMgRmF1c3RvL1NQC0hvbGFtYnJhL1NQD0hvcnRvbMOibmRpYS9TUA1JbmRhaWF0dWJhL1NQDkphZ3VhcmnDum5hL1NQDE1vbnRlIE1vci9TUA5Ob3ZhIE9kZXNzYS9TUAxQYXVsw61uaWEvU1ALUGVkcmVpcmEvU1AYU2FudGEgQmFyYmFyYSBEJ09lc3RlL1NQClN1bWFyw6kvU1ALVmFsaW5ob3MvU1AKVmluaGVkby9TUBURAAMxMTgDMTE5AzEyMAMxMjEDMTIyAzEyMwMxMjQDMTI1AzEyNgMxMjcDMTI4AzEyOQMxMzADMTMxAzEzMgMxMzMUKwMRZ2dnZ2dnZ2dnZ2dnZ2dnZ2dkZAItDw8WAh8ABQZCYWlycm9kZAIxDw8WAh8ABQ5EaWFzIGRhIFNlbWFuYWRkAjMPEGQQFQgHKFRvZG9zKQdEb21pbmdvDVNlZ3VuZGEtRmVpcmEMVGVyw6dhLUZlaXJhDFF1YXJ0YS1GZWlyYQxRdWludGEtRmVpcmELU2V4dGEtRmVpcmEHU8OhYmFkbxUIAAFEATIBMwE0ATUBNgFTFCsDCGdnZ2dnZ2dnZGQCNQ8PFgIfAAURSG9yw6FyaW8gZG8gQ3VsdG9kZAI3DxBkEBUEByhUb2RvcykGTWFuaMOjBVRhcmRlBU5vaXRlFQQBMAFNAVQBThQrAwRnZ2dnZGQCOQ8PFgIfAAULU29tZW50ZSBSSk1kZAI7DxBkEBUCBihOw6NvKQNTaW0VAgEwATEUKwMCZ2dkZAI9Dw8WAh8ABQVCdXNjYWRkAj8PDxYCHwAFHUJ1c2NhIFLDoXBpZGEgLSBJbnRlcm5hY2lvbmFsZGQCRQ8PFgIfAAUFQnVzY2FkZAJHDw8WAh8ABR9CdXNjYSBBdmFuw6dhZGEgLSBJbnRlcm5hY2lvbmFsZGQCSQ9kFgJmD2QWDAIDDw8WAh8ABQdSZWdpw6NvZGQCBQ8QZBAVCAcoVG9kb3MpB8OBZnJpY2EQQW3DqXJpY2EgQ2VudHJhbBFBbcOpcmljYSBkbyBOb3J0ZQ9BbcOpcmljYSBkbyBTdWwFw4FzaWEGRXVyb3BhB09jZWFuaWEVCAAHw4FmcmljYRBBbcOpcmljYSBDZW50cmFsEUFtw6lyaWNhIGRvIE5vcnRlD0Ftw6lyaWNhIGRvIFN1bAXDgXNpYQZFdXJvcGEHT2NlYW5pYRQrAwhnZ2dnZ2dnZxYBZmQCBw8PFgIfAAUFUGHDrXNkZAIJDxBkEBVAByhUb2RvcykOw4FmcmljYSBkbyBTdWwIQWxlbWFuaGEGQW5nb2xhCUFyZ2VudGluYQpBdXN0csOhbGlhCMOBdXN0cmlhCELDqWxnaWNhB0JvbGl2aWEKQ2FibyBWZXJkZQdDYW5hZMOhBUNoaWxlCUNvbMO0bWJpYQ9Db3N0YSBkbyBNYXJmaW0KQ29zdGEgUmljYQlEaW5hbWFyY2ELRWwgU2FsdmFkb3IHRXF1YWRvcgdFc3BhbmhhDkVzdGFkb3MgVW5pZG9zB0ZyYW7Dp2EFR2hhbmEHR3LDqWNpYQlHdWF0ZW1hbGEGR3VpYW5hD0d1aWFuYSBGcmFuY2VzYQ1HdWluw6ktQmlzc2F1BUhhaXRpB0hvbGFuZGEISG9uZHVyYXMGw41uZGlhCkluZ2xhdGVycmEHSXJsYW5kYRBJcmxhbmRhIGRvIE5vcnRlBklzcmFlbAdJdMOhbGlhBkphcMOjbwdMw61iYW5vCkx1eGVtYnVyZ28GTWFsYXdpB03DqXhpY28LTW%2FDp2FtYmlxdWUKTmljYXLDoWd1YQhOaWfDqXJpYQdOb3J1ZWdhDk5vdmEgWmVsw6JuZGlhB1BhbmFtw6EIUGFyYWd1YWkEUGVydQhQb3J0dWdhbCBSZXDDumJsaWNhIERlbW9jcsOhdGljYSBkbyBDb25nbxNSZXDDumJsaWNhIGRvIENvbmdvFVJlcMO6YmxpY2EgRG9taW5pY2FuYRVTw6NvIFRvbcOpIGUgUHJpbmNpcGUGU8OtcmlhCVNyaSBMYW5rYQdTdcOpY2lhB1N1w63Dp2EIU3VyaW5hbWUJVGFuesOibmlhBlVnYW5kYQdVcnVndWFpCVZlbmV6dWVsYQhaaW1iYWJ3ZRVAAA7DgWZyaWNhIGRvIFN1bAhBbGVtYW5oYQZBbmdvbGEJQXJnZW50aW5hCkF1c3Ryw6FsaWEIw4F1c3RyaWEIQsOpbGdpY2EHQm9saXZpYQpDYWJvIFZlcmRlB0NhbmFkw6EFQ2hpbGUJQ29sw7RtYmlhD0Nvc3RhIGRvIE1hcmZpbQpDb3N0YSBSaWNhCURpbmFtYXJjYQtFbCBTYWx2YWRvcgdFcXVhZG9yB0VzcGFuaGEORXN0YWRvcyBVbmlkb3MHRnJhbsOnYQVHaGFuYQdHcsOpY2lhCUd1YXRlbWFsYQZHdWlhbmEPR3VpYW5hIEZyYW5jZXNhDUd1aW7DqS1CaXNzYXUFSGFpdGkHSG9sYW5kYQhIb25kdXJhcwbDjW5kaWEKSW5nbGF0ZXJyYQdJcmxhbmRhEElybGFuZGEgZG8gTm9ydGUGSXNyYWVsB0l0w6FsaWEGSmFww6NvB0zDrWJhbm8KTHV4ZW1idXJnbwZNYWxhd2kHTcOpeGljbwtNb8OnYW1iaXF1ZQpOaWNhcsOhZ3VhCE5pZ8OpcmlhB05vcnVlZ2EOTm92YSBaZWzDom5kaWEHUGFuYW3DoQhQYXJhZ3VhaQRQZXJ1CFBvcnR1Z2FsIFJlcMO6YmxpY2EgRGVtb2Nyw6F0aWNhIGRvIENvbmdvE1JlcMO6YmxpY2EgZG8gQ29uZ28VUmVww7pibGljYSBEb21pbmljYW5hFVPDo28gVG9tw6kgZSBQcmluY2lwZQZTw61yaWEJU3JpIExhbmthB1N1w6ljaWEHU3XDrcOnYQhTdXJpbmFtZQlUYW56w6JuaWEGVWdhbmRhB1VydWd1YWkJVmVuZXp1ZWxhCFppbWJhYndlFCsDQGdnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2cWAWZkAgsPDxYCHwAFBkNpZGFkZWRkAg0PEGQQFfEGByhUb2RvcykVMiBkZSBBZ29zdG8gKEJvbGl2aWEpGUFiaWRqYW4gKENvc3RhIGRvIE1hcmZpbSkUQWNhcmlndWEgKFZlbmV6dWVsYSkNQWNjcmEgKEdoYW5hKRJBY2hyYWZpZWYgKFPDrXJpYSkUQWRkbyBUb3duIChOaWfDqXJpYSkiw4FndWEgSXrDqSAoU8OjbyBUb23DqSBlIFByaW5jaXBlKRLDgWd1ZWRhIChQb3J0dWdhbCkRQWlrby1HdW4gKEphcMOjbykSQWlzaGFsdG9uIChHdWlhbmEpEUFsIEFybWFuIChTw61yaWEpFkFsYmEgUG9zc2UgKEFyZ2VudGluYSkSQWxiZXJkaSAoUGFyYWd1YWkpFEFsYnVmZWlyYSAoUG9ydHVnYWwpFEFsY29iYcOnYSAoUG9ydHVnYWwpE0FsZW5xdWVyIChQb3J0dWdhbCkVQWxlc3NhbmRyaWEgKEl0w6FsaWEpEUFsZ2Fycm9ibyAoQ2hpbGUpGUFsaGFtYnJhIChFc3RhZG9zIFVuaWRvcykRQWxpasOzIChQb3J0dWdhbCkRQWxtYWRhIChQb3J0dWdhbCkTQWxtZWlyaW0gKFBvcnR1Z2FsKRlBbHRvIENhbmRlbGFyaWEgKEJvbGl2aWEpE0Fsdm9yYWRhIChQYXJhZ3VhaSkSQW1hZG9yYSAoUG9ydHVnYWwpEUFtYmVnaGFyICjDjW5kaWEpE0Ftc3RlcmRhbSAoSG9sYW5kYSkRQW5hY28gKFZlbmV6dWVsYSkRQW5hZGlhIChQb3J0dWdhbCkVQW5kZXJsZWNodCAoQsOpbGdpY2EpEUFuam8tU2hpIChKYXDDo28pE0FudG9mYWdhc3RhIChDaGlsZSkPQW9zdGEgKEl0w6FsaWEpFEFwYXJpY2lvIChWZW5lenVlbGEpHEFyY29zIGRlIFZhbGRldmV6IChQb3J0dWdhbCkRQXJlZ3VhIChQYXJhZ3VhaSkPQXJlcXVpcGEgKFBlcnUpEkFyZ2FuaWwgKFBvcnR1Z2FsKQ1BcmljYSAoQ2hpbGUpIEFyaXN0b2J1bG8gRGVsIFZhbGxlIChBcmdlbnRpbmEpEkFyam9uYSAoQ29sw7RtYmlhKSJBcmxpbmd0b24gSGVpZ2h0cyAoRXN0YWRvcyBVbmlkb3MpGEFycm95byBkZSBPcm8gKFBhcmFndWFpKRdBcnJveW8gU2VjbyAoQXJnZW50aW5hKRxBcnJveW9zIHkgRXN0ZXJvcyAoUGFyYWd1YWkpEUFydGlnYXMgKFVydWd1YWkpFEFzdW5jacOzbiAoUGFyYWd1YWkpEUF0aGVuYXMgKEdyw6ljaWEpEUF0aGVucnkgKElybGFuZGEpEUF0eW5neSAoUGFyYWd1YWkpKUF1YmUtVHJveWVzIC8gUG9udC1TYWludGUtTWFyaWUgKEZyYW7Dp2EpGUF1Y2tsYW5kIChOb3ZhIFplbMOibmRpYSkXQXVzdGluIChFc3RhZG9zIFVuaWRvcykQQXZhJ0kgKFBhcmFndWFpKRFBdmVpcm8gKFBvcnR1Z2FsKRZBdmVsbGFuZWRhIChBcmdlbnRpbmEpEkF2ZWxsaW5vIChJdMOhbGlhKRFBeW9sYXMgKFBhcmFndWFpKRBCYWFiZGEgKEzDrWJhbm8pE0JhY2tuYW5nIChBbGVtYW5oYSkWQmFoaWEgTmVncmEgKFBhcmFndWFpKRFCYWnDo28gKFBvcnR1Z2FsKSZCYWpvcyBkZSBIYWluYSAoUmVww7pibGljYSBEb21pbmljYW5hKRhCYWxseWphbWVzZHVmZiAoSXJsYW5kYSkXQmFsdGF6YXIgQnJ1bSAoVXJ1Z3VhaSkVQmFyY2Vsb25hIChWZW5lenVlbGEpE0JhcmNlbG9zIChQb3J0dWdhbCkYQmFycXVpc2ltZXRvIChWZW5lenVlbGEpGEJhcnJhbnF1aWxsYSAoQ29sw7RtYmlhKRNCYXJyZWlybyAoUG9ydHVnYWwpD0Jhc2VsIChTdcOtw6dhKRNCZWlyYSAoTW%2FDp2FtYmlxdWUpFkJlbGxhIFVuacOzbiAoVXJ1Z3VhaSkWQmVsbGEgVmlzdGEgKFBhcmFndWFpKRdCZWxsYSBWaXN0YSAoQXJnZW50aW5hKRtCZWxsZXZpbGxlIChFc3RhZG9zIFVuaWRvcykRQmVuZ3VlbGEgKEFuZ29sYSkbQmVuamFtw61tIEFjZXZhbCAoUGFyYWd1YWkpFUJpZWwtQmllbm5lIChTdcOtw6dhKRZCaXJtaWdoYW0gKEluZ2xhdGVycmEpFkJpc3NhdSAoR3VpbsOpLUJpc3NhdSkTQm9hbmUgKE1vw6dhbWJpcXVlKRhCb2NhIGRlIFLDrW8gKFZlbmV6dWVsYSkfQm9lY2hpbyAoUmVww7pibGljYSBEb21pbmljYW5hKRFCb2xvZ25hIChJdMOhbGlhKRBCb3JhbmRhICjDjW5kaWEpDUJvcmkgKMONbmRpYSkeQm95bnRvbiBCZWFjaCAoRXN0YWRvcyBVbmlkb3MpEEJyYWdhIChQb3J0dWdhbCkSQnJlbnQgKEluZ2xhdGVycmEpG0JyaWRnZXBvcnQgKEVzdGFkb3MgVW5pZG9zKRVCcmlzYmFuZSAoQXVzdHLDoWxpYSkbQnJvbWxleSBDb21tb24gKEluZ2xhdGVycmEpE0J1a29tYmUgKFRhbnrDom5pYSkUQnVsYSAoR3VpbsOpLUJpc3NhdSkSQ2FhY3VwZSAoUGFyYWd1YWkpFENhJ0FndWF6dSAoUGFyYWd1YWkpEUNhYmV6YXMgKEJvbGl2aWEpE0NhYmltYXMgKFZlbmV6dWVsYSkQQ2FiaW5kYSAoQW5nb2xhKRBDYWN1YWNvIChBbmdvbGEpEUNhZmV0YWwgKEJvbGl2aWEpEkNhaWEgKE1vw6dhbWJpcXVlKRBDYWphbWFyY2EgKFBlcnUpDkNhbGFtYSAoQ2hpbGUpG0NhbGRhcyBkYSBSYWluaGEgKFBvcnR1Z2FsKQ1DYWxsYW8gKFBlcnUpG0NhbWJyaWRnZXNoaXJlIChJbmdsYXRlcnJhKRJDYW1pbmhhIChQb3J0dWdhbCkYQ2FtcG8gR3JhbmRlIChBcmdlbnRpbmEpFENhbXBvYmFzc28gKEl0w6FsaWEpFUNhbnRhbmhlZGUgKFBvcnR1Z2FsKRVDYXBhbmdhIChNb8OnYW1iaXF1ZSkSQ2FwaWF0YSAoUGFyYWd1YWkpFENhcGlpdmFyeSAoUGFyYWd1YWkpF0NhcGl0YW4gQmFkbyAoUGFyYWd1YWkpH0NhcGl0YW4gTWV6YSBQdWVydG9zIChQYXJhZ3VhaSkRQ2FyYWJheWxsbyAoUGVydSkTQ2FyYWNhcyAoVmVuZXp1ZWxhKRJDYXJpcGUgKFZlbmV6dWVsYSkdQ2FybG9zIFNwZWdhenppbmkgKEFyZ2VudGluYSkSQ2Fyb3JhIChWZW5lenVlbGEpIENhcnJhemVkYSBkZSBBbnNpw6NlcyAoUG9ydHVnYWwpFUNhcnRhZ2VuYSAoQ29sw7RtYmlhKRJDYXJ0YXhvIChQb3J0dWdhbCkSQ2FzYWJsYW5jYSAoQ2hpbGUpEkNhc2NhaXMgKFBvcnR1Z2FsKRNDYXNlcm9zIChBcmdlbnRpbmEpEUNhc2VydGEgKEl0w6FsaWEpH0Nhc3RhbmhlaXJhIGRlIFDDqnJhIChQb3J0dWdhbCkTQ2F0Y2hpdW5nbyAoQW5nb2xhKQ9DYXRldGUgKEFuZ29sYSkWQ2F0emFjb2FsY29zIChNw6l4aWNvKRFDYXVjaGFsIChCb2xpdmlhKRZDZWhlcmVzcGF5IChWZW5lenVlbGEpHENlbG9yaWNvIGRlIEJhc3RvIChQb3J0dWdhbCkWQ2Vycm8gQ29yw6EgKFBhcmFndWFpKRZDZXJybyBNZW1ieSAoUGFyYWd1YWkpE0NlcnJvIE5hdmlhIChDaGlsZSkaQ2hhcmxvdHRlIChFc3RhZG9zIFVuaWRvcykRQ2hhdmVzIChQb3J0dWdhbCkVQ2hpYnV0byAoTW%2FDp2FtYmlxdWUpD0NoaWNsYXlvIChQZXJ1KRNDaGlndWF5YW50ZSAoQ2hpbGUpEENoaWxsw6FuIChDaGlsZSkVQ2hpbW9pbyAoTW%2FDp2FtYmlxdWUpEUNoaW5ndWFyIChBbmdvbGEpFkNoaXNzYW5vIChNb8OnYW1iaXF1ZSkRQ2hvcsOpIChQYXJhZ3VhaSkRQ2hvcnJpbGxvcyAoUGVydSkdQ2hyaXN0Y2h1cmNoIChOb3ZhIFplbMOibmRpYSkOQ2h1eSAoVXJ1Z3VhaSkbQ2lkYWRlIGRvIE3DqXhpY28gKE3DqXhpY28pE0NpbmbDo2VzIChQb3J0dWdhbCkbQ2l1ZGFkIERlbCBMZXN0ZSAoUGFyYWd1YWkpF0NpdWRhZCBKdWFyZXogKE3DqXhpY28pFENsYXlwb2xlIChBcmdlbnRpbmEpFENsb3JpbmRhIChBcmdlbnRpbmEpEENvYmlqYSAoQm9saXZpYSkUQ29jaGFiYW1iYSAoQm9saXZpYSkPQ29kZWd1YSAoQ2hpbGUpEkNvaW1icmEgKFBvcnR1Z2FsKRVDb2xjYXBpcmh1YSAoQm9saXZpYSkdQ29sbGVnZSBQYXJrIChFc3RhZG9zIFVuaWRvcykqQ29sw7RuaWEgQcOnb3JpYW5hIChTw6NvIFRvbcOpIGUgUHJpbmNpcGUpHUNvbG9uaWEgQnJpdHogQ3XDqSAoUGFyYWd1YWkpJUNvbG9uaWEgQ2FybG9zIFBlbGxlZ3JpbmkgKEFyZ2VudGluYSkeQ29sb25pYSBDZXJybyBQeXTDoyAoUGFyYWd1YWkpL0NvbG9uaWEgR2VuZXJhbCBCZXJuYXJkaW5vIENhYmFsbGVybyAoUGFyYWd1YWkpIENvbG9uaWEgSW5kZXBlbmRlbmNpYSAoUGFyYWd1YWkpHENvbG9uaWEgSXRhY2FyYW1pIChQYXJhZ3VhaSkkQ29sb25pYSBKb3PDqSBGZWxpeCBMb3BlcyAoUGFyYWd1YWkpHENvbG9uaWEgTWFyYcOxZSdlIChQYXJhZ3VhaSkiQ29sb25pYSBOdWV2YSBFc3BlcmFuemEgKFBhcmFndWFpKRxDb2xvbmlhIFBhc28gUmVhbCAoUGFyYWd1YWkpGUNvbG9uaWEgUGluZMOzIChQYXJhZ3VhaSkdQ29sb25pYSBQcmltYXZlcmEgKEFyZ2VudGluYSkaQ29sb25pYSBQeXJhY2F5IChQYXJhZ3VhaSkgQ29sb25pYSBTYW5ndWluYSBDdcOpIChQYXJhZ3VhaSkpQ29sb25pYSBTYW50YSBSb3NhIGRlbCBBcmFndWF5IChQYXJhZ3VhaSkgQ29sb25pYSBTYW50byBEb21pbmdvIChQYXJhZ3VhaSkbQ29sb25pYSBUYXF1YXDDuiAoUGFyYWd1YWkpHENvbG9uaWEgVGF0dSBDdcOpIChQYXJhZ3VhaSkeQ29sb25pYSBUZWNvIFB5YWjDuiAoUGFyYWd1YWkpHENvbG9uaWEgWWJ5IFB5dMOjIChQYXJhZ3VhaSkZQ29sb25pYSBZbmFtYnUgKFBhcmFndWFpKRlDb2x1bWJ1cyAoRXN0YWRvcyBVbmlkb3MpIENvbWFuZGFudGUgQW5kcmVzaXRvIChBcmdlbnRpbmEpHUNvbXVuaWRhZCBkZSBNYWRyaWQgKEVzcGFuaGEpKkNvbXVuaWRhZCBJbmRpZ2VuYSBQdWVydG8gRGlhbmEgKFBhcmFndWFpKRtDb211bmlkYWQgUGFsbWlyYSAoQm9saXZpYSkhQ29tdW5pZGFkIFNhbiBGcmFuY2lzY28gKEJvbGl2aWEpI0NvbXVuaWRhZCBTYW4gTHXDrXMgQ2hpY28gKEJvbGl2aWEpFENvbmNhcmFuIChBcmdlbnRpbmEpFkNvbmNlcGNpw7NuIChQYXJhZ3VhaSkTQ29uY2VwY2nDs24gKENoaWxlKRVDb25jb3JkaWEgKEFyZ2VudGluYSkUQ8OzcmRvYmEgKEFyZ2VudGluYSkQQ29ybyAoVmVuZXp1ZWxhKQ9Db3JvbmVsIChDaGlsZSkZQ29yb25lbCBPdmllZG8gKFBhcmFndWFpKRlDb3JvbmVsIFZpZGFsIChBcmdlbnRpbmEpGUNvcnB1cyBDaHJpc3R5IChQYXJhZ3VhaSkRQ29zZW56YSAoSXTDoWxpYSkTQ292aWxow6MgKFBvcnR1Z2FsKSRDcmFpZ2F2b24gQm9yb3VnaCAoSXJsYW5kYSBkbyBOb3J0ZSkgQ3J1Y2UgZGUgbG9zIFBpb25lcm9zIChQYXJhZ3VhaSkaQ3J1Y2UgU2FuIFJvcXVlIChQYXJhZ3VhaSkUQ3VhbWJhIChNb8OnYW1iaXF1ZSkVQ3VtYW5kYWNheSAoUGFyYWd1YWkpD0N1bmVvIChJdMOhbGlhKRNDdXJhbmlsYWh1ZSAoQ2hpbGUpFEN1cnVndWF0eSAoUGFyYWd1YWkpFUN1dHJhbCBDbyAoQXJnZW50aW5hKRBEYWJobG9uICjDjW5kaWEpF0RhbGxhcyAoRXN0YWRvcyBVbmlkb3MpGERhbmJ1cnkgKEVzdGFkb3MgVW5pZG9zKRdEYXJpZW4gKEVzdGFkb3MgVW5pZG9zKRNEZWxpY2lhIChBcmdlbnRpbmEpGERldHJvaXQgKEVzdGFkb3MgVW5pZG9zKRhEaXN0cml0byBkZSBDdXpjbyAoUGVydSkZRGlzdHJpdG8gZGUgU2luY29zIChQZXJ1KSNEaXN0cml0byBUcmVzIGRlIEZlYnJlcm8gKFBhcmFndWFpKR1Eb2xpc2llIChSZXDDumJsaWNhIGRvIENvbmdvKRNEb2xvcmVzIChBcmdlbnRpbmEpFURvbXNlbGxhciAoQXJnZW50aW5hKSBEb20tVG9tIEtvdXJvdSAoR3VpYW5hIEZyYW5jZXNhKRNEb25kbyAoTW%2FDp2FtYmlxdWUpF0Rvbmdhcmdhb24gTWFsICjDjW5kaWEpFkRvbm5hIChFc3RhZG9zIFVuaWRvcyk5RHIuIEp1YW4gRXVsb2dpbyBFc3RpZ2FycmliaWEgKEV4IENhbXBvIE51ZXZlKSAoUGFyYWd1YWkpF0RyYWN1dCAoRXN0YWRvcyBVbmlkb3MpEURyYW1tZW4gKE5vcnVlZ2EpEER1YmxpbiAoSXJsYW5kYSkfRWFzdCBCcnVuc3dpY2sgKEVzdGFkb3MgVW5pZG9zKRhFYXN0IFN1c3NleCAoSW5nbGF0ZXJyYSkSRWRtb250b24gKENhbmFkw6EpFUVsIEFyZW5hbCAoVmVuZXp1ZWxhKRJFbCBQaW5hciAoVXJ1Z3VhaSkURWwgUmVtYW56byAoQm9saXZpYSkURWxkb3JhZG8gKEFyZ2VudGluYSkXRW5jYXJuYWNpw7NuIChQYXJhZ3VhaSkPRW5uaXMgKElybGFuZGEpEkVuc2VuYWRhIChNw6l4aWNvKRRFbnRyZSBSaW9zIChCb2xpdmlhKRFFcGVybmF5IChGcmFuw6dhKQ9FcmNpbGxhIChDaGlsZSkSRXNwaW5obyAoUG9ydHVnYWwpFUVzcGluaWxsbyAoQXJnZW50aW5hKRRFc3Bvc2VuZGUgKFBvcnR1Z2FsKRRFc3RhcnJlamEgKFBvcnR1Z2FsKRHDiXZvcmEgKFBvcnR1Z2FsKQ9GYWZlIChQb3J0dWdhbCkbRmFsbCBSaXZlciAoRXN0YWRvcyBVbmlkb3MpD0Zhcm8gKFBvcnR1Z2FsKRVGZWxndWVpcmFzIChQb3J0dWdhbCkaRmlndWVpcmEgZGEgRm96IChQb3J0dWdhbCkURmlsYWRlbGZpYSAoQm9saXZpYSkQRmluYXAgKFBhcmFndWFpKRFGaXJlbnplIChJdMOhbGlhKQ9GbG9yaWRhIChDaGlsZSkTRm9ybW9zYSAoQXJnZW50aW5hKRpGcmFpbGUgUGludGFkbyAoQXJnZW50aW5hKRtGcmFtaW5naGFtIChFc3RhZG9zIFVuaWRvcykaRnJhbmtwb3J0IChFc3RhZG9zIFVuaWRvcykWRnJlZGVyaWNpYSAoRGluYW1hcmNhKQ5GcmVpcmUgKENoaWxlKRJGcmlib3VyZyAoU3XDrcOnYSkYRnVlcnRlIE9saW1wbyAoUGFyYWd1YWkpEUZ1amktU2hpIChKYXDDo28pFUZ1a3V5YW1hLVNoaSAoSmFww6NvKRJGdW5jaGFsIChQb3J0dWdhbCkSR2FubW8tR3VuIChKYXDDo28pEkdhcnVwYSAoQXJnZW50aW5hKRlHZW5lcmFsIEFxdWlubyAoUGFyYWd1YWkpHEdlbmVyYWwgQmVsZ3Jhbm8gKEFyZ2VudGluYSkdR2VuZXJhbCBNYWRhcmlhZ2EgKEFyZ2VudGluYSkbR2VuZXJhbCBQYWNoZWNvIChBcmdlbnRpbmEpGkdlbmVyYWwgUmVzcXVpbiAoUGFyYWd1YWkpGEdlbmVyYWwgUm9jYSAoQXJnZW50aW5hKRBHZW5vdmEgKEl0w6FsaWEpHUdvYmVybmFkb3IgQ2FzdHJvIChBcmdlbnRpbmEpFUdvbmRvbGEgKE1vw6dhbWJpcXVlKRNHb25kb21hciAoUG9ydHVnYWwpE0dvbmRwaXBhcmkgKMONbmRpYSkXR29yb25nb3NhIChNb8OnYW1iaXF1ZSkiR3JlZ8OzcmlvIGRlIExhZmVycmVyZSAoQXJnZW50aW5hKRNHdWFjYXJhIChWZW5lenVlbGEpGUd1YWxlZ3VheWNow7ogKEFyZ2VudGluYSkZR3VhbGVndWF5Y2jDuiAoQXJnZW50aW5hKRZHdcOhcGlsZXMgKENvc3RhIFJpY2EpFEd1YXJlbmFzIChWZW5lenVlbGEpGkd1YXRlbWFsYSBDaXR5IChHdWF0ZW1hbGEpE0d1YXlhaWJpIChQYXJhZ3VhaSkTR3VheWFxdWlsIChFcXVhZG9yKRZHdWF5YXJhbWVyaW4gKEJvbGl2aWEpFEd1ZXJuaWNhIChBcmdlbnRpbmEpEkd1aWNow7NuIChVcnVndWFpKRVHdWltYXLDo2VzIChQb3J0dWdhbCkUSGFja25leSAoSW5nbGF0ZXJyYSkSSGFpbmF1dCAoQsOpbGdpY2EpFkhhbWFtYXRzdS1TaGkgKEphcMOjbykWSGFtcHNoaXJlIChJbmdsYXRlcnJhKR5IYXV0IFJoaW4gLSBNdWxob3VzZSAoRnJhbsOnYSkTSGVlbXN0ZWVkIChIb2xhbmRhKRdIZXJuYW5kYXJpYXMgKFBhcmFndWFpKSNIaWRhbGdvIChBbGhhbWJyYSkgKEVzdGFkb3MgVW5pZG9zKR5IaWdhc2hpIE1hdHN1eWFtYS1TaGkgKEphcMOjbykVSGlyYWthdGEtU2hpIChKYXDDo28pEkjDtmNoc3QgKMOBdXN0cmlhKQ5Ib2xvbiAoSXNyYWVsKRNIb3JxdWV0YSAoUGFyYWd1YWkpGEhvdXN0b24gKEVzdGFkb3MgVW5pZG9zKQ9IdWFtYm8gKEFuZ29sYSkUSHVhcXVpbGxhcyAoRXF1YWRvcikSSHVlY2h1cmFiYSAoQ2hpbGUpGEh5YW5uaXMgKEVzdGFkb3MgVW5pZG9zKQ1JYmVyaWEgKFBlcnUpEUlsaGF2byAoUG9ydHVnYWwpGklsbGEgZGUgTWFsbG9yY2EgKEVzcGFuaGEpFUltIEFsemVpdG91biAoU8OtcmlhKRBJbXBlcmlhbCAoQ2hpbGUpFEluZGVwZW5kZW5jaWEgKFBlcnUpF0luaGFtaW5nYSAoTW%2FDp2FtYmlxdWUpF0luaGFycmltZSAoTW%2FDp2FtYmlxdWUpGEludGVybmFjaW9uYWwgKFBhcmFndWFpKQ9JcXVpcXVlIChDaGlsZSkOSXF1aXRvcyAoUGVydSkSSXJhcmFtaXJhIChVZ2FuZGEpHklzbGEgZGUgR3JhbiBDYW5hcmlhIChFc3BhbmhhKRtJc2xhIGRlIExhbnphcm90ZSAoRXNwYW5oYSkaSXNsYSBkZSBUZW5lcmlmZSAoRXNwYW5oYSkYSXNsYSBZYWN5cmV0YSAoUGFyYWd1YWkpJUl0YWN1cnViaSBkZSBsYSBDb3JkaWxsZXJhIChQYXJhZ3VhaSkSSXRha3lyeSAoUGFyYWd1YWkpE0l0YW5hcsOjIChQYXJhZ3VhaSkRSXR1cmJlIChQYXJhZ3VhaSkVSXZpcmdhcnphbWEgKEJvbGl2aWEpEkl3YXRhLVNoaSAoSmFww6NvKRhKYWNrc29uIChFc3RhZG9zIFVuaWRvcykdSmFja3NvbnZpbGxlIChFc3RhZG9zIFVuaWRvcykRSmFyYW1hbmEgKFPDrXJpYSkMSmF1amEgKFBlcnUpEkplcnVzYWxlbSAoSXNyYWVsKRpKZXN1cyBOYXphcmVubyAoQXJnZW50aW5hKRFKb2PDs24gKEhvbmR1cmFzKR5Kb2hhbm5lc2JvdXJnICjDgWZyaWNhIGRvIFN1bCkeSm9zw6kgQ2xlbWVudGUgUGF6IChBcmdlbnRpbmEpGkp1YW4gRS4gTydMZWFyeSAoUGFyYWd1YWkpIEp1YW4gTGXDs24gTWFsbG9ycXVpbiAoUGFyYWd1YWkpHUp1YW4gTWFudWVsIEZydXRvcyAoUGFyYWd1YWkpEUthYmlyaXppIChVZ2FuZGEpGUtha2FtaWdhaGFyYS1TaGkgKEphcMOjbykVS2FrZWdhd2EtU2hpIChKYXDDo28pKUthbGFtdSAoUmVww7pibGljYSBEZW1vY3LDoXRpY2EgZG8gQ29uZ28pD0thbGVnZSAoVWdhbmRhKRVLYW1leWFtYS1TaGkgKEphcMOjbykXS2FtcGFsYS9NcGFuZ2EgKFVnYW5kYSkqS2FuYW5nYSAoUmVww7pibGljYSBEZW1vY3LDoXRpY2EgZG8gQ29uZ28pEEthc2FuZGEgKFVnYW5kYSkUS2FzaGl3YS1TaGkgKEphcMOjbykVS2FzaG9uZ29yZXJvIChVZ2FuZGEpFEthdGFneWVtZWtvIChVZ2FuZGEpEkthdHVldGUgKFBhcmFndWFpKQ9LaWJhbGEgKEFuZ29sYSkeS2liYW5nb3UgKFJlcMO6YmxpY2EgZG8gQ29uZ28pD0tpZ3VndSAoVWdhbmRhKRBLaWh1dW5hIChVZ2FuZGEpMEtpa3dpdC9MdWtlbWkgKFJlcMO6YmxpY2EgRGVtb2Nyw6F0aWNhIGRvIENvbmdvKS1LaW1iYW5zZWtlIChSZXDDumJsaWNhIERlbW9jcsOhdGljYSBkbyBDb25nbykUS2luZ3N2aWxsZSAoQ2FuYWTDoSkZS2lya2xhbmQgKEVzdGFkb3MgVW5pZG9zKRBLaXlhbmdhIChVZ2FuZGEpEEtvdGhhcmkgKMONbmRpYSkTS3Vmc3RlaW4gKMOBdXN0cmlhKQ5LdW1hc2kgKEdoYW5hKRZLdXJhc2hpa2ktU2hpIChKYXDDo28pEUt1cmUtU2hpIChKYXDDo28pEUxhIENhbGVyYSAoQ2hpbGUpF0xhIENsb3RpbGRlIChBcmdlbnRpbmEpD0xhIENydXogKENoaWxlKSJMYSBFbWJvY2FkYSBEZWwgUXVlcXVpdmUgKEJvbGl2aWEpFUxhIEVtaWxpYSAoQXJnZW50aW5hKRRMYSBQYWxvbWEgKFBhcmFndWFpKRBMYSBQYXogKEJvbGl2aWEpEUxhIFNlcmVuYSAoQ2hpbGUpEkxhIFZpY3RvcmlhIChQZXJ1KRlMYWd1bmEgQmxhbmNhIChBcmdlbnRpbmEpEkxhbWJhcmUgKFBhcmFndWFpKRRMYW5kc2tyb25hIChTdcOpY2lhKRVMYXMgUm9zYXMgKEFyZ2VudGluYSkaTGFzIFZlZ2FzIChFc3RhZG9zIFVuaWRvcykSTGF1c2FubmUgKFN1w63Dp2EpD0xhdXRhcm8gKENoaWxlKRRMYXZlcnRlenpvIChTdcOtw6dhKSJMZWFuZHJvIE5pY8OpZm9ybyBBbGVtIChBcmdlbnRpbmEpEUxlaXJpYSAoUG9ydHVnYWwpG0xlb21pbnN0ZXIgKEVzdGFkb3MgVW5pZG9zKRJMZcOzbiAoTmljYXLDoWd1YSkPTGV0aGVtIChHdWlhbmEpFUxld2lzaGFtIChJbmdsYXRlcnJhKRZMaWJlcmFjacOzbiAoUGFyYWd1YWkpKUxpYmVydGFkbyBHZW5lcmFsIFNhbiBNYXJ0w61uIChBcmdlbnRpbmEpEExpZWdlIChCw6lsZ2ljYSkPTGltYSAoUGFyYWd1YWkpD0xpbWFjaGUgKENoaWxlKRNMaW1vbmFyIChWZW5lenVlbGEpEUxpbXBpbyAoUGFyYWd1YWkpEUxpc2JvYSAoUG9ydHVnYWwpD0xvYml0byAoQW5nb2xhKQ5Mb2RpIChJdMOhbGlhKShMb2RqYSAoUmVww7pibGljYSBEZW1vY3LDoXRpY2EgZG8gQ29uZ28pFUxvbWEgUGxhdGEgKFBhcmFndWFpKRxMb25nIEJyYW5jaCAoRXN0YWRvcyBVbmlkb3MpF0xvcyBBbG1lbmRyb3MgKEJvbGl2aWEpE0xvcyBBbmdlbGVzIChDaGlsZSkXTG9zIENlZHJhbGVzIChQYXJhZ3VhaSkWTG9zIFRlcXVlcyAoVmVuZXp1ZWxhKRFMb3Vsw6kgKFBvcnR1Z2FsKRRMb3VyaW5ow6MgKFBvcnR1Z2FsKQ9MdWFuZGEgKEFuZ29sYSkQTHViYW5nbyAoQW5nb2xhKQ5MdWVuYSAoQW5nb2xhKRhMdWlzIEJlbHRyYW4gKEFyZ2VudGluYSkQTHVxdWUgKFBhcmFndWFpKRVMeW5uIChFc3RhZG9zIFVuaWRvcykRTWFjaGFsYSAoRXF1YWRvcikSTWFjaGljbyAoUG9ydHVnYWwpEk1hw6lpcGFkYSAow41uZGlhKRBNYWZyYSAoUG9ydHVnYWwpD01haWEgKFBvcnR1Z2FsKRBNYWlhbmdhIChBbmdvbGEpIU1haW5lLUV0LUxvaXJlIC0gQW5nZXJzIChGcmFuw6dhKQ1NYWlwdSAoQ2hpbGUpEk1haXDDuiAoQXJnZW50aW5hKRJNYWlww7ogKEFyZ2VudGluYSkeTWFrYWJhbmEgKFJlcMO6YmxpY2EgZG8gQ29uZ28pJE1ha8OpbMOpa8OpbMOpIChSZXDDumJsaWNhIGRvIENvbmdvKRNNYWxkb25hZG8gKFVydWd1YWkpEE1hbGxlcmEgKMONbmRpYSkVTWFuw6FndWEgKE5pY2Fyw6FndWEpFE1hbmd1YWxkZSAoUG9ydHVnYWwpFE1hbmljYSAoTW%2FDp2FtYmlxdWUpFk1hbnNvYSAoR3VpbsOpLUJpc3NhdSkRTWFudG92YSAoSXTDoWxpYSkWTWFuemFuaWxsbyAoVmVuZXp1ZWxhKRRNYXB1dG8gKE1vw6dhbWJpcXVlKRlNYXIgZGVsIFBsYXRhIChBcmdlbnRpbmEpFU1hcmFjYWlibyAoVmVuZXp1ZWxhKRNNYXJhY2F5IChWZW5lenVlbGEpHU1hcmNvIGRlIENhbmF2ZXNlcyAoUG9ydHVnYWwpFU1hcmV0cmFpdGUgKFN1cmluYW1lKRxNYXJpYSBBdXhpbGlhZG9yYSAoUGFyYWd1YWkpGU1hcmlldHRhIChFc3RhZG9zIFVuaWRvcykXTWFyaW5ndcOpIChNb8OnYW1iaXF1ZSkZTWFyaW5oYSBHcmFuZGUgKFBvcnR1Z2FsKRZNYXJyb21ldSAoTW%2FDp2FtYmlxdWUpEU1hc3dhIChUYW56w6JuaWEpFE1hdG9sYSAoTW%2FDp2FtYmlxdWUpFU1hdG9zaW5ob3MgKFBvcnR1Z2FsKRRNYXR1csOtbiAoVmVuZXp1ZWxhKRRNYmFyYWNheXUgKFBhcmFndWFpKRRNYmFyYWNheXUgKFBhcmFndWFpKTVNYnVqaS1NYXlpL0RpYmluZGkgKFJlcMO6YmxpY2EgRGVtb2Nyw6F0aWNhIGRvIENvbmdvKSpNY2FsLiBKb3PDqSBGw6lsaXggRXN0aWdhcnJpYmlhIChQYXJhZ3VhaSkYTWNBbGxlbiAoRXN0YWRvcyBVbmlkb3MpE01lYWxoYWRhIChQb3J0dWdhbCkYTWVjYW5oZWxhcyAoTW%2FDp2FtYmlxdWUpFU1lY29udGUgKE1vw6dhbWJpcXVlKQ5NZWRoaSAow41uZGlhKRZNZWxib3VybmUgKEF1c3Ryw6FsaWEpE01lbGdhw6dvIChQb3J0dWdhbCkYTWVtcGhpcyAoRXN0YWRvcyBVbmlkb3MpEk1lcmlkYSAoVmVuZXp1ZWxhKRFNZXJsbyAoQXJnZW50aW5hKRFNZXNzaW5hIChJdMOhbGlhKRxNZmlsb3UgKFJlcMO6YmxpY2EgZG8gQ29uZ28pFk1pYW1pIChFc3RhZG9zIFVuaWRvcykRTWljaGVyZmUgKFPDrXJpYSkVTWlsYW5nZSAoTW%2FDp2FtYmlxdWUpEE1pbGFubyAoSXTDoWxpYSkaTWlsd2F1a2VlIChFc3RhZG9zIFVuaWRvcykXTWluZ2EgR3VhesO6IChQYXJhZ3VhaSkWTWluZ2EgUG9yw6MgKFBhcmFndWFpKRxNaXNpw7NuIFRhY2FhZ2xlIChBcmdlbnRpbmEpHk1pc3NhZm91IChSZXDDumJsaWNhIGRvIENvbmdvKQ9NaXRhcmEgKFVnYW5kYSkTTWl0c3VrYWlkbyAoSmFww6NvKRRNb2dhZG91cm8gKFBvcnR1Z2FsKRxNb2ltZW50YSBkYSBCZWlyYSAoUG9ydHVnYWwpFU1vbnRhbGVncmUgKFBvcnR1Z2FsKRtNb250ZW1vci1vLVZlbGhvIChQb3J0dWdhbCkRTW9udGVybyAoQm9saXZpYSkTTW9udGVycmV5IChNw6l4aWNvKRRNb250ZXZpZGVvIChVcnVndWFpKRJNb250cmVhbCAoQ2FuYWTDoSkSTW9yZW5vIChBcmdlbnRpbmEpGE1vcnJ1bWJhbGEgKE1vw6dhbWJpcXVlKRRNb3J0w6FndWEgKFBvcnR1Z2FsKRtNb3NlbGxlIC0gSGF5YW5nZSAoRnJhbsOnYSkQTXViZW5kZSAoVWdhbmRhKRVNdWVjYXRlIChNb8OnYW1iaXF1ZSkRTXVrYXJhbWEgKFVnYW5kYSkTTXVrdW5vbXVyYSAoVWdhbmRhKRBNdXJjaWEgKEVzcGFuaGEpFk11dGFyYXJhIChNb8OnYW1iaXF1ZSkRTXV0YXJlIChaaW1iYWJ3ZSkSTXdhbnphIChUYW56w6JuaWEpDk5hYXMgKElybGFuZGEpFU5hZ2FoYW1hLVNoaSAoSmFww6NvKRNOYWdveWEtU2hpIChKYXDDo28pFU5hbXB1bGEgKE1vw6dhbWJpcXVlKRPDkWFuY2F5IChBcmdlbnRpbmEpF05hcGxlcyAoRXN0YWRvcyBVbmlkb3MpE05hcmFuamFsIChQYXJhZ3VhaSkUTmFyYW5qaXRvIChQYXJhZ3VhaSkXTmFzaHVhIChFc3RhZG9zIFVuaWRvcykSTmF0YWxpYSAoUGFyYWd1YWkpDE5hdXRhIChQZXJ1KRbDkWUgUHl0eWLDtSAoUGFyYWd1YWkpEcORZW1ieSAoUGFyYWd1YWkpFE5ldXF1w6luIChBcmdlbnRpbmEpHE5ldyBPcmxlYW5zIChFc3RhZG9zIFVuaWRvcykZTmV3IFlvcmsgKEVzdGFkb3MgVW5pZG9zKRdOZXdhcmsgKEVzdGFkb3MgVW5pZG9zKRhOZXdwb3J0IChFc3RhZG9zIFVuaWRvcykoTmdhYmEgKFJlcMO6YmxpY2EgRGVtb2Nyw6F0aWNhIGRvIENvbmdvKRhOaGFtYXRhbmRhIChNb8OnYW1iaXF1ZSkaTmlldXcgQW1zdGVyZGFuIChTdXJpbmFtZSkRTmltYmFwdXIgKMONbmRpYSkRTmlyYXNha2kgKEphcMOjbykSTmlyZ3VhIChWZW5lenVlbGEpD05vZ2FsZXMgKENoaWxlKRROb3Jmb2xrIChJbmdsYXRlcnJhKSFOb3J0aCBDaGFybGVzdG9uIChFc3RhZG9zIFVuaWRvcykPTnNhbmplIChNYWxhd2kpFk51ZXZhIENhamFtYXJjYSAoUGVydSkZTnVldmEgQ29sb21iaWEgKFBhcmFndWFpKRpOdWV2YSBFc3BlcmFuemEgKFBhcmFndWFpKRlOdWV2YSBFc3BlcmFuemEgKEJvbGl2aWEpGU51ZXZhIEVzcGVyYW56YSAoUGFuYW3DoSkZTnVldmEgR2VybWFuaWEgKFBhcmFndWFpKRdOdWV2YSBJdGFsaWEgKFBhcmFndWFpKRFPYmVyYSAoQXJnZW50aW5hKSbDlGJvIEl6YXF1ZW50ZSAoU8OjbyBUb23DqSBlIFByaW5jaXBlKRFPaXRhLVNoaSAoSmFww6NvKRJPa2F5YS1TaGkgKEphcMOjbykUT2xhbmNoaXRvIChIb25kdXJhcykWT2xiaWEgVGVtcGlvIChJdMOhbGlhKRBPbXVrYWtvIChVZ2FuZGEpEE9uZGppdmEgKEFuZ29sYSkYT3JsYW5kbyAoRXN0YWRvcyBVbmlkb3MpDk9zb3JubyAoQ2hpbGUpEE90YS1TaGkgKEphcMOjbykfT3R0b2JydW5uIChNw7xuY2hlbikgKEFsZW1hbmhhKR1PdWVuesOpIChSZXDDumJsaWNhIGRvIENvbmdvKRFPdXLDqW0gKFBvcnR1Z2FsKQ9PdmFyIChQb3J0dWdhbCkYT3hmb3Jkc2hpcmUgKEluZ2xhdGVycmEpEVBhbGVybW8gKEl0w6FsaWEpE1BhbGVzdGluYSAoRXF1YWRvcikQUGFsZ2hhciAow41uZGlhKRVQYW1waWxob3NhIChQb3J0dWdhbCkSUGFtcGxvbmEgKEVzcGFuaGEpGlBhbmNoaXRvIEzDs3BleiAoUGFyYWd1YWkpKlBhcmFqZSBDYXBpdMOhbiBQZWRybyBHaWFjaGlubyAoQXJnZW50aW5hKRxQYXJhamUgUHJpbWF2ZXJhIChBcmdlbnRpbmEpJFBhcmFqZSBWaXJnZW4gZGUgTG91cmRlcyAoQXJnZW50aW5hKRNQYXJhbWFuIChWZW5lenVlbGEpElBhcmVkZXMgKFBvcnR1Z2FsKRhQYXJpcyAvIEVybW9udCAoRnJhbsOnYSkPUGFybWEgKEl0w6FsaWEpGlBhcnF1ZSBkZWwgUGxhdGEgKFVydWd1YWkpHlBhc28gZGUgTG9zIExpYnJlcyAoQXJnZW50aW5hKRNQYXNvIEpodSAoUGFyYWd1YWkpE1BheXNhbmTDuiAoVXJ1Z3VhaSkYUGVhYm9keSAoRXN0YWRvcyBVbmlkb3MpH1BlZHJvIEp1YW4gQ2FiYWxsZXJvIChQYXJhZ3VhaSkTUGVuYWNvdmEgKFBvcnR1Z2FsKRNQZW5hZmllbCAoUG9ydHVnYWwpEVBlw7FhZmxvciAoQ2hpbGUpDVBlbmNvIChDaGlsZSkQUMOpcsOpZG8gKEhhaXRpKRpQw6lyZXogTWlsbMOhbiAoQXJnZW50aW5hKRJQZXJ0aCAoQXVzdHLDoWxpYSkRUGVzY2FyYSAoSXTDoWxpYSkZUGVzbyBkYSBSw6lndWEgKFBvcnR1Z2FsKR1QaGlsYWRlbHBoaWEgKEVzdGFkb3MgVW5pZG9zKRhQaWN1biBMZXVmw7ogKEFyZ2VudGluYSkQUGlsYXIgKFBhcmFndWFpKRVQaXJhIFB5dMOjIChQYXJhZ3VhaSkbUGl0dHNidXJnaCAoRXN0YWRvcyBVbmlkb3MpE1BpdmlqYXkgKENvbMO0bWJpYSkZUGxhemEgSHVpbmN1bCAoQXJnZW50aW5hKRRQbG90dGllciAoQXJnZW50aW5hKSBQb2JsYWNpw7NuIExhIEZsw7NyaWRhIChCb2xpdmlhKSFQb2ludCBOb2lyZSAoUmVww7pibGljYSBkbyBDb25nbykRUG9tYmFsIChQb3J0dWdhbCkeUG9tcGFubyBCZWFjaCAoRXN0YWRvcyBVbmlkb3MpGFBvbnRhIERlbGdhZGEgKFBvcnR1Z2FsKRhQb250ZSBkZSBMaW1hIChQb3J0dWdhbCkXUG9udGUgZGUgU29yIChQb3J0dWdhbCkhUG9ydCBTYWludCBMdWNpZSAoRXN0YWRvcyBVbmlkb3MpFFBvcnRpbcOjbyAoUG9ydHVnYWwpEFBvcnRvIChQb3J0dWdhbCkWUG9ydG8gUHJpbmNpcGUgKEhhaXRpKRJQb3J2ZW5pciAoQm9saXZpYSkTUG9zYWRhcyAoQXJnZW50aW5hKRFQb3Rvc8OtIChCb2xpdmlhKRtQw7N2b2EgZGUgVmFyemltIChQb3J0dWdhbCkbUG96byBkZSBOYXZhZ2FuIChBcmdlbnRpbmEpElByYWlhIChDYWJvIFZlcmRlKRxQcmFpYSBkYSBWaXTDs3JpYSAoUG9ydHVnYWwpHVByZXNpZGVudGUgRGVycXVpIChBcmdlbnRpbmEpGVByaW1hdmVyYSBSZWFsIChQYXJhZ3VhaSkgUHJpbmNpcGUgKFPDo28gVG9tw6kgZSBQcmluY2lwZSkZUHJvc3BlY3QgKEVzdGFkb3MgVW5pZG9zKSBQcm92aW5jaWEgZGUgQSBDb3J1w7FhIChFc3BhbmhhKR9Qcm92aW5jaWEgZGUgQWxpY2FudGUgKEVzcGFuaGEpH1Byb3ZpbmNpYSBkZSBBbG1lcsOtYSAoRXNwYW5oYSkeUHJvdmluY2lhIGRlIEJhZGFqb3ogKEVzcGFuaGEpIFByb3ZpbmNpYSBkZSBCYXJjZWxvbmEgKEVzcGFuaGEpH1Byb3ZpbmNpYSBkZSBDw6FjZXJlcyAoRXNwYW5oYSkdUHJvdmluY2lhIGRlIEPDoWRpeiAoRXNwYW5oYSkgUHJvdmluY2lhIGRlIENhc3RlbGzDsyAoRXNwYW5oYSkfUHJvdmluY2lhIGRlIEPDs3Jkb2JhIChFc3BhbmhhKR1Qcm92aW5jaWEgZGUgR2lyb25hIChFc3BhbmhhKR5Qcm92aW5jaWEgZGUgR3JhbmFkYSAoRXNwYW5oYSkiUHJvdmluY2lhIGRlIEd1YWRhbGFqYXJhIChFc3BhbmhhKSBQcm92aW5jaWEgZGUgR3VpcHV6Y29hIChFc3BhbmhhKR1Qcm92aW5jaWEgZGUgSHVlbHZhIChFc3BhbmhhKRtQcm92aW5jaWEgZGUgSmFlbiAoRXNwYW5oYSkcUHJvdmluY2lhIGRlIExlw7NuIChFc3BhbmhhKR1Qcm92aW5jaWEgZGUgTGxlaWRhIChFc3BhbmhhKR5Qcm92aW5jaWEgZGUgTcOhbGFnYSAoRXNwYW5oYSkeUHJvdmluY2lhIGRlIE91cmVuc2UgKEVzcGFuaGEpHVByb3ZpbmNpYSBkZSBPdmllZG8gKEVzcGFuaGEpIVByb3ZpbmNpYSBkZSBQb250ZXZlZHJhIChFc3BhbmhhKR5Qcm92aW5jaWEgZGUgU2V2aWxsYSAoRXNwYW5oYSkgUHJvdmluY2lhIGRlIFRhcnJhZ29uYSAoRXNwYW5oYSkdUHJvdmluY2lhIGRlIFRlcnVlbCAoRXNwYW5oYSkfUHJvdmluY2lhIGRlIFZhbGVuY2lhIChFc3BhbmhhKSFQcm92aW5jaWEgZGUgVmFsbGFkb2xpZCAoRXNwYW5oYSkeUHJvdmluY2lhIGRlIFZpemNheWEgKEVzcGFuaGEpH1Byb3ZpbmNpYSBkZSBaYXJhZ296YSAoRXNwYW5oYSkPUHVjYWxscGEgKFBlcnUpFlB1ZW50ZSBLeWhhIChQYXJhZ3VhaSkUUHVlbnRlIFBpZWRyYSAoUGVydSkXUHVlcnRvIEFkZWxhIChQYXJhZ3VhaSkeUHVlcnRvIENhcGl0YW4gTWV6YSAoUGFyYWd1YWkpHFB1ZXJ0byBFc3BlcmFuemEgKEFyZ2VudGluYSkXUHVlcnRvIEljaGlsbyAoQm9saXZpYSkaUHVlcnRvIElndWF6w7ogKEFyZ2VudGluYSkXUHVlcnRvIE1hbGRvbmFkbyAoUGVydSkYUHVlcnRvIE9yZGF6IChWZW5lenVlbGEpI1B1ZXJ0byBQcmVzaWRlbnRlIEZyYW5jbyAoUGFyYWd1YWkpGVB1ZXJ0byBRdWlqYXJybyAoQm9saXZpYSkYUHVlcnRvIFN1w6FyZXogKEJvbGl2aWEpG1F1ZWVuc3Rvd24gKE5vdmEgWmVsw6JuZGlhKRdRdWVsaW1hbmUgKE1vw6dhbWJpcXVlKRVRdWludGEgTm9ybWFsIChDaGlsZSkPUXVpdG8gKEVxdWFkb3IpEFJhZ3VzYSAoSXTDoWxpYSkYUmFsZWlnaCAoRXN0YWRvcyBVbmlkb3MpE1JhbWFsbG8gKEFyZ2VudGluYSkQUmFuY2FndWEgKENoaWxlKR5SYXVsIEFyc2VuaW8gT3ZpZWRvIChQYXJhZ3VhaSkZUmVnZ2lvIENhbGFicmlhIChJdMOhbGlhKQ9SZWhlYmUgKFPDrXJpYSkPUmVpbXMgKEZyYW7Dp2EpGFJlcGF0cmlhY2nDs24gKFBhcmFndWFpKRFSZXlub3NhIChNw6l4aWNvKRFSaGVpbmUgKEFsZW1hbmhhKRBSaG9kZXMgKEdyw6ljaWEpJlJow7RuZSAtIEx5b24gLyBTYWludCBQcmllc3QgKEZyYW7Dp2EpFFJpYmF3ZSAoTW%2FDp2FtYmlxdWUpJlJpYmVpcmEgQWZvbnNvIChTw6NvIFRvbcOpIGUgUHJpbmNpcGUpE1JpYmVyYWx0YSAoQm9saXZpYSkZUmljaG1vbmQgKEVzdGFkb3MgVW5pZG9zKR5SaWp3ZWcgTmFhciBVaXRraWprIChTdXJpbmFtZSkeUmluY29uYWRhIGRlIExvcyBBbmRlcyAoQ2hpbGUpFFJpbyBCcmFuY28gKFVydWd1YWkpEFJpdmVyYSAoVXJ1Z3VhaSkaUml2ZXJoZWFkIChFc3RhZG9zIFVuaWRvcykaUml2ZXJzaWRlIChFc3RhZG9zIFVuaWRvcykRUm9ib3LDqSAoQm9saXZpYSkPUm9jaGEgKFVydWd1YWkpDlJvbWEgKEl0w6FsaWEpFFJvc8OhcmlvIChBcmdlbnRpbmEpEVJvdWJhaXggKEZyYW7Dp2EpEFJ1aGluZGEgKFVnYW5kYSkQUnVoaW5kYSAoVWdhbmRhKRZSdXJyZW5hYmFxdWUgKEJvbGl2aWEpEFJ3aWJhcmUgKFVnYW5kYSkUUnd1YXNoYW1pcmUgKFVnYW5kYSktU2FiYW5hIEdyYW5kZSBkZSBCb3lhIChSZXDDumJsaWNhIERvbWluaWNhbmEpGlNhaW50IENhdGhhcmluZXMgKENhbmFkw6EpHlNhaW50IE91ZW4gTCdBdW3DtG5lIChGcmFuw6dhKRFTYWxlcm5vIChJdMOhbGlhKRpTYWxpc2J1cnkgKEVzdGFkb3MgVW5pZG9zKRFTYWx0YSAoQXJnZW50aW5hKRJTYWx0aWxsbyAoTcOpeGljbykRU2FsdG8gKEFyZ2VudGluYSkPU2FsdG8gKFVydWd1YWkpG1NhbHRvIGRlbCBHdWFpcmEgKFBhcmFndWFpKRVTYW1hemEgQmFqYSAoQm9saXZpYSkWU2FuIEFsYmVydG8gKFBhcmFndWFpKRZTYW4gQWxmcmVkbyAoUGFyYWd1YWkpFlNhbiBBbnRvbmlvIChQYXJhZ3VhaSkXU2FuIEFudG9uaW8gKEFyZ2VudGluYSkUU2FuIEJlbml0byAoQm9saXZpYSkUU2FuIEJlcm5hcmRvIChDaGlsZSkUU2FuIENhcmxvcyAoVXJ1Z3VhaSkZU2FuIENyaXN0w7NiYWwgKFBhcmFndWFpKRlTYW4gRXN0YW5pc2xhbyAoUGFyYWd1YWkpFVNhbiBGZWxpeCAoVmVuZXp1ZWxhKSFTYW4gRmVybmFuZG8gZGUgQXB1cmUgKFZlbmV6dWVsYSkYU2FuIEZyYW5jaXNjbyAoUGFyYWd1YWkpHlNhbiBGcmFuY2lzY28gKEVzdGFkb3MgVW5pZG9zKSFTYW4gRnJhbmNpc2NvIGRlIFlhcmUgKFZlbmV6dWVsYSkWU2FuIElnbsOhY2lvIChCb2xpdmlhKRRTYW4gSmF2aWVyIChVcnVndWFpKRZTYW4gSm9zw6kgKENvc3RhIFJpY2EpIFNhbiBKb3PDqSBkZSBBbmFjb2NvIChWZW5lenVlbGEpIFNhbiBKb3PDqSBkZSBDaGlxdWl0b3MgKEJvbGl2aWEpIlNhbiBKb3PDqSBkZSBsYSBGcm9udGVyYSAoQm9saXZpYSkWU2FuIExvcmVuem8gKFBhcmFndWFpKRVTYW4gTWF0w61hcyAoQm9saXZpYSkXU2FuIE1hdXJpY2lvIChQYXJhZ3VhaSkWU2FuIE1pZ3VlbCAoQXJnZW50aW5hKRdTYW4gTWlndWVsaXRvIChQYW5hbcOhKSdTYW4gTsOtY29sYXMgZGUgbG9zIEFycm95b3MgKEFyZ2VudGluYSkVU2FuIFBlZHJvIChBcmdlbnRpbmEpFVNhbiBQZWRybyAoQXJnZW50aW5hKRNTYW4gUGVkcm8gKEJvbGl2aWEpFFNhbiBQZWRybyAoUGFyYWd1YWkpG1NhbiBQZWRybyBkZSBMYSBQYXogKENoaWxlKRVTYW4gUmFmYWVsIChQYXJhZ3VhaSkfU2FuIFJhZmFlbCBkZSBPbm90byAoVmVuZXp1ZWxhKR9TYW4gUmFmYWVsIGRlbCBTdXIgKE5pY2Fyw6FndWEpFFNhbiBSb3F1ZSAoUGFyYWd1YWkpGlNhbiBTZWJhc3Rpw6FuIChWZW5lenVlbGEpFlNhbiBWaWNlbnRlIChQYXJhZ3VhaSkVU2FuIFZpY2VudGUgKEJvbGl2aWEpF1NhbiBWaWNlbnRlIChBcmdlbnRpbmEpFlNhbmphIFB5dMOjIChQYXJhZ3VhaSkSU2FudGEgQW5pdGEgKFBlcnUpFVNhbnRhIEJvbWEgKFN1cmluYW1lKRZTYW50YSBDbGFyYSAoUGFyYWd1YWkpG1NhbnRhIENvbWJhIETDo28gKFBvcnR1Z2FsKSFTYW50YSBDcnV6IGRlIGxhIFNpZXJyYSAoQm9saXZpYSkhU2FudGEgRWxlbmEgZGUgVWFpcmVuIChWZW5lenVlbGEpFFNhbnRhIEbDqSAoUGFyYWd1YWkpE1NhbnRhIEbDqSAoQm9saXZpYSkjU2FudGEgTHV6aWEgKFPDo28gVG9tw6kgZSBQcmluY2lwZSkfU2FudGEgTWFyaWEgZGEgRmVpcmEgKFBvcnR1Z2FsKRVTYW50YSBSaXRhIChQYXJhZ3VhaSkfU2FudGEgUm9zYSBkZWwgQWJ1bsOhIChCb2xpdmlhKSFTYW50YSBSb3NhIGRlbCBBcmFndWF5IChQYXJhZ3VhaSkWU2FudGEgUm9zaXRhIChCb2xpdmlhKRdTYW50YSBUZXJlc2EgKFBhcmFndWFpKSBTYW50YSBUZXJlc2EgZGVsIFR1eSAoVmVuZXp1ZWxhKRZTYW50byBUaXJzbyAoUG9ydHVnYWwpIFPDo28gSm%2FDo28gZGEgTWFkZWlyYSAoUG9ydHVnYWwpIlPDo28gVG9tw6kgKFPDo28gVG9tw6kgZSBQcmluY2lwZSkSU2FwdWNhaSAoUGFyYWd1YWkpE1Nhc2thdG9vbiAoQ2FuYWTDoSkRU2F0aWdueSAoU3XDrcOnYSkRU2VpeGFsIChQb3J0dWdhbCkTU2V0w7piYWwgKFBvcnR1Z2FsKRVTaGlueWFuZ2EgKFRhbnrDom5pYSkVU2h1c2h1ZmluZGkgKEVxdWFkb3IpE1NpZG5leSAoQXVzdHLDoWxpYSkQU2luZXMgKFBvcnR1Z2FsKRFTaW50cmEgKFBvcnR1Z2FsKRdTbnlkZXIgKEVzdGFkb3MgVW5pZG9zKRdTb3lhcGFuZ28gKEVsIFNhbHZhZG9yKRVTdGVpbnNlbCAoTHV4ZW1idXJnbykPU3VjcmUgKEJvbGl2aWEpGFN1c3N1ZGVuZ2EgKE1vw6dhbWJpcXVlKRNTdXpha2EtU2hpIChKYXDDo28pDFRhY25hIChQZXJ1KRVUYWN1YXJlbWLDsyAoVXJ1Z3VhaSkSVGFjdWF0aSAoUGFyYWd1YWkpFFRha2Fva2EtU2hpIChKYXDDo28pEFRha29yYWRpIChHaGFuYSkTVGFsIE5hZ3B1ciAow41uZGlhKQ1UYWxjYSAoQ2hpbGUpElRhbGNhaHVhbm8gKENoaWxlKQ5UYW1hbmNvIChQZXJ1KRZUYW1wYSAoRXN0YWRvcyBVbmlkb3MpF1Rhb3lvaGFzaGktU2hpIChKYXDDo28pEVRhcmFudG8gKEl0w6FsaWEpE1RhcmFyaXJhcyAoVXJ1Z3VhaSkWVGVndWNpZ2FscGEgKEhvbmR1cmFzKRlUZW1iaWFwbyBSZW5kYSAoUGFyYWd1YWkpDlRoYW5lICjDjW5kaWEpEFRob3Z5IChQYXJhZ3VhaSkTVGluZ28gTWFyw61hIChQZXJ1KRZUbGFsbmVwYW50bGEgKE3DqXhpY28pFFRvY3V5aXRvIChWZW5lenVlbGEpElRvbmRlbGEgKFBvcnR1Z2FsKRBUb3Jpbm8gKEl0w6FsaWEpEVRvcm9udG8gKENhbmFkw6EpF1RvcnJlcyBOb3ZhcyAoUG9ydHVnYWwpE1RvdXJjb2luZyAoRnJhbsOnYSkYVHJlaW50YSB5IFRyZXMgKFVydWd1YWkpEVRyZXZpc28gKEl0w6FsaWEpEVRyaW5kYWQgKEJvbGl2aWEpElRyaW5pZGFkIChVcnVndWFpKRBUcm9mYSAoUG9ydHVnYWwpD1RydWppbGxvIChQZXJ1KStUc2hpa2FwYSAoUmVww7pibGljYSBEZW1vY3LDoXRpY2EgZG8gQ29uZ28pFFRzdXlhbWEtU2hpIChKYXDDo28pFFR1cGFyZW5kYSAoUGFyYWd1YWkpElViYWpheSAoQXJnZW50aW5hKQ9VZGluZSAoSXTDoWxpYSkOVcOtZ2UgKEFuZ29sYSkSVW11YWhpYSAoTmlnw6lyaWEpFFZhbGVuY2lhIChWZW5lenVlbGEpElZhbGxlbWkgKFBhcmFndWFpKRBWYWxsZW5hciAoQ2hpbGUpElZhbG9uZ28gKFBvcnR1Z2FsKRNWYWxwYXJhw61zbyAoQ2hpbGUpE1ZhbmNvdXZlciAoQ2FuYWTDoSkTVmFxdWVyaWEgKFBhcmFndWFpKRBWYXJlc2UgKEl0w6FsaWEpEFZlcm9uYSAoSXTDoWxpYSkOVmlhbmEgKEFuZ29sYSkbVmlhbmEgZG8gQ2FzdGVsbyAoUG9ydHVnYWwpEVZpY2VuemEgKEl0w6FsaWEpElZpa3JhbWdhZCAow41uZGlhKRhWaWxhIGRvIENvbmRlIChQb3J0dWdhbCkUVmlsYSBGbG9yIChQb3J0dWdhbCkeVmlsYSBGcmFuY2EgZGUgWGlyYSAoUG9ydHVnYWwpJFZpbGEgTWFsYW56YSAoU8OjbyBUb23DqSBlIFByaW5jaXBlKSJWaWxhIE5vdmEgZGUgRmFtYWxpY8OjbyAoUG9ydHVnYWwpIFZpbGEgTm92YSBkZSBGb3ogQ8O0YSAoUG9ydHVnYWwpHFZpbGEgTm92YSBkZSBHYWlhIChQb3J0dWdhbCkUVmlsYSBSZWFsIChQb3J0dWdhbCkUVmlsYSBSaWNhIChQYXJhZ3VhaSkVVmlsbGEgQWxlbWFuYSAoQ2hpbGUpF1ZpbGxhIENhbXBpIChBcmdlbnRpbmEpH1ZpbGxhIENvbnN0aXR1Y2nDs24gKEFyZ2VudGluYSkZVmlsbGEgSWd1YXRlbWkgKFBhcmFndWFpKRdWaWxsYSBMYXJjYSAoQXJnZW50aW5hKRdWaWxsYSBMeW5jaCAoQXJnZW50aW5hKRZWaWxsYSBPbGl2YSAoUGFyYWd1YWkpFlZpbGxhIFJvc2EgKFZlbmV6dWVsYSkSVmlsbGFycmljYSAoQ2hpbGUpE1ZpbGxhesOzbiAoQm9saXZpYSkSVmlsbGV0YSAoUGFyYWd1YWkpH1ZpcmdpbmlhIEJlYWNoIChFc3RhZG9zIFVuaWRvcykQVmlzZXUgKFBvcnR1Z2FsKRFWaXplbGEgKFBvcnR1Z2FsKRFXYW5kYSAoQXJnZW50aW5hKRNXYXR0YWxhIChTcmkgTGFua2EpGVdhdWtlc2hhIChFc3RhZG9zIFVuaWRvcykZV2VybWVsc2tpcmNoZW4gKEFsZW1hbmhhKR9XZXN0IExhZmF5ZXR0ZSAoRXN0YWRvcyBVbmlkb3MpIVdlc3QgVmFsbGV5IENpdHkgKEVzdGFkb3MgVW5pZG9zKRdXaWVuIChWaWVuYSkgKMOBdXN0cmlhKRZXaWx0c2hpcmUgKEluZ2xhdGVycmEpFFdpbnRlcnRodXIgKFN1w63Dp2EpEVdpcmdlcyAoQWxlbWFuaGEpFVhhaS1YYWkgKE1vw6dhbWJpcXVlKRJZYWl6dS1TaGkgKEphcMOjbykTWWFyYWNhbCAoVmVuZXp1ZWxhKRVZYXN5IENhw7F5IChQYXJhZ3VhaSkSWWJ5IFlhdSAoUGFyYWd1YWkpFllieXJhcm92YW5hIChQYXJhZ3VhaSkOWWh1IChQYXJhZ3VhaSkYWW9ua2VycyAoRXN0YWRvcyBVbmlkb3MpEFlwYW5lIChQYXJhZ3VhaSkOWXVtYmVsIChDaGlsZSkPWXV0eSAoUGFyYWd1YWkpEVphYmFkYW5pIChTw61yaWEpElphcGFsYSAoQXJnZW50aW5hKRNaw6FyYXRlIChBcmdlbnRpbmEpE1plbWJlIChNb8OnYW1iaXF1ZSkV8QYABDUyNTAENDY5MwQ1NDA4BDQ2OTUENDkyMAQ0NzI5BDQ3NDcENTA5MAQ0OTAxBDUzMjgENDkyNAQ1MTk5BDU1MzIENTEyNQQ1MDk1BDUxMDkENTAyMwQ1Mjg4BDQ4MDAENTA3NQQ1MTIwBDUxMTgENTI0OQQ1NDcwBDUxMTAENDg3NgQ0OTg4BDUzNzkENTA5MQQ0OTM2BDQ4OTIENTI4MwQ1MDMyBDU0MDMENTA3MAQ1NDE1BDUzMzcENTA4MwQ1MzE2BDUyMDAENTMxOAQ0ODE2BDU1MDAENTIyOAQ1NTExBDUzNTkENTQxNAQ0OTg2BDUwMDQENTUyOAQ0OTgwBDUxNDUENDg1MQQ1NDY1BDUwOTIENTE0OQQ1MDEwBDU1MjkENDkxOQQ0OTI4BDU0MjcENTA0MwQ0NzkwBDUwMDIENTM2MAQ1Mzc4BDUwNTgENTM5NQQ1MzE5BDUxMjEENTEzNwQ0NzE2BDUzNjEENTQ0OQQ1MTUwBDQ4MzQENDY4MQQ1NTM1BDUxMzgENTAwMAQ0Njk3BDQ4NjkENTQwNgQ0NzkyBDUwMTMENDg3NwQ0ODc4BDQ4MDgENTA1OQQ0OTkxBDQ4MDUENTE0MwQ0OTkyBDQ3NTUENDY5OAQ1NTEyBDU0NTQENTIzNwQ1NDEzBDQ2ODMENDY3NwQ1MjU2BDQ3MTcENTMzOAQ1Mjg0BDUwOTYENTMzMAQ0OTk0BDUwNzEENTIwMQQ1MDIyBDUwODQENDcyNAQ1NDE2BDU1MzgENTQ1MAQ1NTE5BDUzMzIENTM3NwQ1NDA0BDUxNTEENTM5NAQ1MDY2BDUzMTcENTExOQQ1Mjg5BDUxMTEENTE1MgQ1MDExBDUwOTcENDY4NQQ0NjgwBDQ4NjgENTI1MQQ1MzgwBDUwNjAENTQ3MQQ1NDk5BDUyNzcENDg0MwQ1MDc2BDQ3MDQENTM0MwQ1MzAwBDUzMDEENDcwNwQ0Njg2BDQ3MDUENTUzOQQ1MzMzBDUxNDYENTM3MgQ0ODYxBDUwODAENTQzMAQ0ODYzBDUxNTMENTE4NQQ1MjY3BDUyNTkENTI5NgQ1MDgyBDUyNjUENDgyMQQ0NzQ4BDU0NzIENTE3OQQ1NDczBDU0NzQENTUxNQQ1NDc1BDU1MDEENTUwMgQ1NTAzBDU0NzYENTQ2NgQ1MTg2BDU0NzcENTQ3OAQ1NTQwBDU0NzkENTQ4MAQ1NDgxBDU0ODIENTQ4MwQ1NDg0BDQ4NDQENTIwMgQ0OTczBDU0MjgENTI0NgQ1MjQ3BDUyNTIENTIyNQQ1NTA0BDUyOTkENTE4MQQ1MTc3BDUzOTIENTMwMgQ1NDU1BDUxNjkENTQ2OQQ1MDA4BDUwOTQENTAwNgQ1NTM2BDU0MzEENDcxNAQ1NDg1BDUwMjQENTMwMwQ1NDg2BDUyMTYENDg3OQQ0ODUwBDQ4MDQENDgxNwQ1MjAzBDQ4MzAENTM0OQQ1MzQwBDU0NTYENDc0MQQ1MTcwBDUxNTQENTMyOQQ0NzE4BDQ4ODAENDg1MgQ1NDU3BDQ4MjMENTAzNwQ1MDAzBDQ4MzUENDk5NgQ0Nzk2BDUzOTcENTM2MgQ1MjU3BDUyMDQENTUxOAQ1MDAxBDQ4NjIENTI2MAQ0OTc5BDUzMTEENTA1MwQ1MTg3BDUwNjEENTA1NAQ1MTE2BDUwNjIENDgyNAQ1MTI2BDUwNDQENTA4NQQ1MjcxBDU1NDEENTAzMQQ1MzA0BDUxODgENTE5NAQ0ODI1BDQ4MTkENDkzOQQ1MzEyBDUxMzQENTQyNgQ0OTEyBDQ4OTgENTEzMQQ0OTEwBDUyMDUENTU0MgQ1MTg5BDUxNzEENTE1NQQ1NTQzBDUyMjIENTAxNwQ1MTYzBDQ4NzAENTAzOQQ0ODgxBDQ3MTkENTE1NgQ1MzkwBDUxODAENTE4MgQ0Nzc3BDUzOTgENDc3OQQ1NTQ0BDUzMjQENTI0NQQ1MTU3BDUzNTgENTA2MwQ0OTkzBDQ5MzgENDkxMwQ0OTk3BDQ5NzcENDk4OQQ1NDMyBDQ4MDEENDkwOQQ0OTA4BDQ5MzUENDg5MQQ1NTA1BDQ4NTMENDY4NwQ1MzIyBDUyNzgENDgyNgQ1MzQ3BDUwOTMENDk0MQQ0OTI2BDUzMTMENTMzNAQ0NzIwBDQ3MDYENTQ4NwQ1MjgyBDUzNDQENDc2NAQ0OTY3BDQ5NjgENDk2NgQ1NTI3BDU1MTMENTQzMwQ1NDg4BDU1MTYENTI2MQQ0OTE0BDQ4MzYENDgwOQQ0OTIxBDUzNDEENDg5MAQ1MTk3BDQ3ODMENDY3NQQ1NTUzBDU0MzQENTQzNQQ1NDU4BDQ3NTkENDg5NgQ0OTE1BDQ3MzIENDg3NAQ0OTAyBDQ3NTgENDczNQQ0NzcxBDQ4OTUENDc2NQQ0NzY2BDU0ODkENDY4OQQ0NzQyBDQ3NzQENDc3MgQ0NzM0BDQ3MzMENDc5NAQ0ODU4BDQ3NjcENDg4MgQ0OTM0BDQ2OTYENDkwNgQ0ODk5BDUyOTAENTE3NgQ1MjkxBDUyNTMENTE3NAQ1NDkwBDUyNjYENTI4NgQ1MzMxBDUxOTAENTQxNwQ1MTMzBDUyMjkENDgzMQQ1MTM2BDUzMTAENTE0MAQ1MjA2BDUwOTgENDgyNwQ0Nzg2BDUzMjcENDk5MAQ1NTM3BDUxOTUENDkzNwQ1NTQ1BDUyOTIENTQxMAQ1NDE4BDUxMDgENDY4MgQ1MDE5BDQ4NzIENTQ1MwQ0ODM3BDUyNzUENTMwNQQ1NDM2BDUzOTkENTEyNwQ1MTEyBDQ2NzYENDY4OAQ0NjkwBDUyMjMENTQxOQQ0ODIyBDUzMjMENTEzMgQ0ODgzBDUxMTMENTA0MAQ0Njc4BDQ5ODQENTI3OQQ1MTk2BDUxNzIENDc0MwQ0NzM4BDUzNjcENDg4NAQ0Nzg1BDUxMDMENDcwOAQ0Njk5BDUwMjAENTQwNwQ0NzAxBDUxNjgENTQxMgQ1MzgzBDUwNDUENTM1NQQ1NTIwBDQ4MTUENDcyMQQ1MDk5BDQ3MjIENDc1NwQ0NzAyBDUwNDEENTQwMgQ1NDM3BDU0OTEENDczNwQ1NDUyBDQ4NTQENTA4NgQ0NzE1BDQ3MTEENDg4NQQ1MTQxBDUwNzIENDg0OQQ1Mzk2BDUxNTgENTAyOQQ0NzM5BDQ4MDcENDkyNQQ0NzI3BDUwMTgENDg1OQQ1NDM4BDU0MzkENTE5MQQ0NzQ1BDQ3NjgENDkwMAQ1MDY3BDUwODEENTA3NwQ1MDg3BDUyNDIENDg2NgQ1MzY5BDQ3OTgENTE1OQQ0NzI4BDUxMDQENDk4MwQ0NzcwBDQ3MTIENDc2MAQ0NzYyBDQ5NjkENDcyNQQ0Nzc1BDQ3NTYENTAwNQQ0OTExBDQ4OTMENDcxMAQ1MTgzBDQ4MTAENTQ0MAQ1NTIxBDQ4MzIENTUyMgQ1MzQ1BDU1MDYENTQyMAQ1MjE3BDQ4MjAENDgzOQQ0ODMzBDQ4NDcENDczMQQ0NzIzBDUzNTQENDg4NgQ0OTE4BDU0MTEENTI5MwQ0OTk1BDQ4NDgENDcwMAQ1MzUwBDU1MTQENTQ5MgQ1MjcwBDQ3ODkENTU0NgQ1NDIxBDUyMDcENDc0OQQ0OTA1BDQ5MDMENDc4MgQ1MDI3BDQ3NjEENDY4NAQ0ODExBDUzMTUENDg5NwQ0OTI5BDQ3NDAENTEwMQQ1MDU1BDQ5OTgENTAzMAQ1MzI1BDQ4ODcENTA4OAQ0OTcwBDU1MzAENTIwOAQ1MjA5BDUyMTAENTM4MQQ1MDQ2BDQ5ODEENTAxNAQ1MzYzBDUxNzgENTUwNwQ1MzU3BDQ4MjgENTQ0OAQ1MDg5BDUwNDcENTI4MAQ1MzA2BDQ3ODEENTE2NAQ1MTQ0BDUwMDcENTA3OAQ0ODQ1BDUyMTgENTUzMQQ1NDQxBDQ4NDYENTMyMAQ1MjE5BDUyMjAENTI2MgQ0NzQ0BDUxMDAENDgxMgQ1MTI5BDUwNzMENTExNwQ0ODEzBDUxMjgENTAzOAQ0NzgwBDUyNjgENTE5OAQ1MjcyBDUwNDgENTE5MgQ0NjkyBDUxMzAENTE2MAQ1NTQ3BDQ3NTMENDgwNgQ0OTYzBDQ5NTgENDk0NQQ0OTYxBDQ5NDAENDk2MgQ0OTQ2BDQ5NTkENDk0NwQ0OTQyBDQ5NDgENDk3NAQ0OTcxBDQ5NDkENDk1MAQ0OTU2BDQ5NDMENDk1MQQ0OTY0BDQ5NTUENDk2NQQ0OTUyBDQ5NDQENDk1MwQ0OTYwBDQ5NTcENDk3MgQ0OTU0BDUzNTIENTQ5MwQ1MzM1BDU0OTQENTUyMwQ1MjExBDUyNjMENTIxMgQ1MzQ4BDUzODYENTQ0MgQ1MjM5BDUyMzgENTE0NwQ0NzI2BDUyNzYENTMyMQQ1MDI4BDQ4NDIENTE2NQQ1Mjk3BDU0NTkENTAwOQQ0OTIyBDQ5NzgENTQ2MAQ0ODY3BDQ5MzAENDk4NwQ0OTg1BDQ3MTMENDc1MAQ1MjQ4BDQ4NTYENTM1MwQ1Mjk0BDUzNjQENTM3MQQ0ODQwBDQ4MDIENTIzNQQ1MzczBDUwMTYENTIyNwQ0OTc2BDQ3NjkENDc3MwQ1MjU0BDQ3NjMENDg3MwQ0NzkxBDQ3OTUENDk4MgQ1MDEyBDQ4MjkENTIyNAQ0ODY0BDUxNjYENTM3NAQ1NDk1BDUyNzMENTQyOQQ1NDQzBDU0MjIENTIxMwQ1MjY0BDUyODEENTM2OAQ1NDQ0BDU1NDgENTM4NQQ1MzgyBDU0NDUENDgwMwQ1NDAwBDUyNDAENTM3MAQ0Nzc2BDUzODcENTIzNgQ1MjMzBDU0MjMENTIzMgQ1NTI0BDUxNjEENDc4OAQ1MTczBDUxNjcENTE5MwQ1MjQzBDU1NDkENTMwNwQ1NTI1BDU0MDkENDc4NwQ1NTA4BDUzODQENTU1MAQ1MjQxBDUyMTQENTQ1MQQ1MzM2BDUzNTYENTUyNgQ1MTA1BDUyMzEENTM4OAQ1NDQ2BDUyMzQENDc1MQQ1MDU2BDU0NDcENTI2OQQ1NTUxBDUyNTUENTQ2MQQ1NDAxBDUwNDkENTA1NwQ0NzQ2BDU1MzQENDc5OQQ1MTM1BDUxMjIENTEyMwQ0NzU0BDUzMjYENTE0MgQ1MTI0BDUxMTQENDgzOAQ0Nzc4BDUwMzYENTI1OAQ0ODcxBDQ5MDQENTM1MQQ1Mzc1BDU1NTIENDkxNwQ0Njk0BDQ4ODgENTI5OAQ1MzA4BDUzNDYENDgxNAQ0ODk0BDUwMjYENTM2NQQ0Nzg0BDU0NjQENDg4OQQ1NDk2BDUzMzkENDg2NQQ1MzkxBDUxMDYENTAyNQQ0NzkzBDUxMDIENDk3NQQ1Mzc2BDUwMzQENTI0NAQ1MzY2BDUwNTAENTM0MgQ0NzM2BDQ5MDcENTQ2NwQ1MTg0BDUwMTUENDY5MQQ0NzMwBDUzODkENTUwOQQ1Mjg1BDUwNTEENTI4NwQ0Nzk3BDU0NjIENTAyMQQ1MDMzBDQ2NzkENTA3NAQ1MDM1BDQ4NzUENTA1MgQ1MDY4BDUxMTUENDc1MgQ1MDY0BDUwNjkENTA0MgQ1MDc5BDU1MTcENTI5NQQ1MTc1BDUyMzAENTQ5NwQ1MjI2BDUxNDgENTUzMwQ1NDA1BDUzMTQENTI3NAQ1NDI0BDQ4NTcENTEwNwQ1MDY1BDUyMTUENDkyNwQ0ODYwBDQ5MzEENDgxOAQ0ODU1BDQ5MzMENDk5OQQ1MTM5BDQ5MzIENDcwMwQ0OTE2BDUzOTMENTQ5OAQ1NTEwBDU1NTQENTQ2MwQ0ODQxBDU0MjUENTMwOQQ1NDY4BDQ5MjMENTIyMQQ1MTYyBDQ3MDkUKwPxBmdnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZGQCSw8PFgIfAAUFTG9jYWxkZAJPDw8WAh8ABQ5EaWFzIGRhIFNlbWFuYWRkAlEPEGQQFQgHKFRvZG9zKQdEb21pbmdvDVNlZ3VuZGEtRmVpcmEMVGVyw6dhLUZlaXJhDFF1YXJ0YS1GZWlyYQxRdWludGEtRmVpcmELU2V4dGEtRmVpcmEHU8OhYmFkbxUIAANEb20DU2VnA1RlcgNRdWEDUXVpA1NleARTw6FiFCsDCGdnZ2dnZ2dnZGQCUw8PFgIfAAULU29tZW50ZSBSSk1kZAJVDxBkEBUCBihOw6NvKQNTaW0VAgEwATEUKwMCZ2dkZAJXDw8WAh8ABQVCdXNjYWRkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYDBQxJbWFnZUJ1dHRvbjEFDEltYWdlQnV0dG9uMgUMSW1hZ2VCdXR0b24zHSLokTaxNf4kxl96UrBbG3PbhjArLg09ZRuF2zIzlyg%3D&__VIEWSTATEGENERATOR=52FB4AEA&idigreja=&aba=detalhe&search=&avanc=avanc&estado=SP&regiao=Campinas&cidade=119&bairro=&diasemana=&horario=0&somenterjm=0&search2=&avanc2=&estado2=&regiao2=&cidade2=&bairro2=&diasemana2=&somenterjm2=0")
# 	resp, data = Net::HTTP.post_form(url, params)
# 	doc = Nokogiri::HTML(resp.body)

# 	clear_directory()

# 	doc.css("table tr").each_with_index do |church, index|
# 		location = church.css("a#GridView1_HyperLinkimg_#{index-1}")[0]
# 		church_detail location['href'], base if location != nil
# 	end


# end

# def clear_directory
# 	FileUtils.rm_rf("./vendor/assets/images/.", secure: true)
# end

# def church_detail address, base
# 	address = "#{base}/#{address}"
# 	puts "Opening #{address}"
# 	doc = Nokogiri::HTML(open(address))
# 	title = doc.css("h3 span")[0].text if doc.css("h3 span")[0]
# 	if doc.css("#thumbs ul li img")[0]
# 		image = doc.css("#thumbs ul li img")[0]["src"]
# 		open("./vendor/assets/images/#{title.parameterize}.jpg", 'wb') do |file|
# 			file << open(image).read
# 		end
# 	end
# end